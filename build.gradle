buildscript {
    repositories {
        mavenCentral()
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:1.2-SNAPSHOT'
    }
}

ext.buildProps = file "build.properties"

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

apply from: './BuiltBrokenScripts/index.gradle'
apply plugin: "forge"

ext.buildProps = file "build.properties"

println "Current Minecraft version = " + minecraft.apiVersion

def currentJvm = org.gradle.internal.jvm.Jvm.current()
println "Current Java version = " + currentJvm

buildProps.withReader {
    def prop = new Properties()
    prop.load(it)
    ext.config = new ConfigSlurper().parse prop
}

group = "com.builtbroken.creations"
archivesBaseName = "Creations"


println archivesBaseName 

version = "${project.minecraft.version}-${config.version.mod.major}.${config.version.mod.minor}.${config.version.mod.revis}b"

// This is used to set the local version
if (project.hasProperty("bambooBuildNumber"))
    version += project.bambooBuildNumber
else
    version += getDate()

println "version = "+ version

minecraft {
	replace "@MAJOR@", config.version.mod.major
	replace "@MINOR@", config.version.mod.minor
	replace "@REVIS@", config.version.mod.revis
	
	if (project.hasProperty("bambooBuildNumber")) {
		replace "@BUILD@", project.bambooBuildNumber
	}
	else {
		replace "@BUILD@", getDate()
	}
}

processResources {
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in text files, not binary ones.
    from(sourceSets.main.resources.srcDirs) {
        include '**/*.info'

        // replace version and MCVersion
        // forge version is also accessible via project.minecraftforgeVersion
        // it contains the full minecraft version, including buildNumber
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }

    // copy everything else, thats not text
    from(sourceSets.main.resources.srcDirs) { exclude '**/*.info' }
}

repositories {
    maven {
        name "BuiltBroken"
        url "http://ci.builtbroken.com/maven/"
    }
}

dependencies {
    compile 'com.google.gag:gag:1.0.1'
    testCompile 'junit:junit:4.11'
    compile "dev.builtbroken.voltzengine:VoltzEngine:1.7.10-0.+:deobf-dev"
}

def getDate() {
    def date = new Date()
    def formattedDate = date.format('yyyyMMddHHmmss')
    return formattedDate
}